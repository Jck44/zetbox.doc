# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2013-10-04 09:46+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title -
#, no-wrap
msgid "States of an Input Control\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"*Input controls* are Views receiving input from the user. The following\n"
"state diagram explains the possible basic states of the underlying\n"
"*InputViewModel*:\n"
msgstr ""

#. type: Plain text
msgid ""
"An InputViewModel has two distinct dimensions along which it modifies its "
"behaviour. One is whether or not it currently has the focus[^1]. The other "
"dimension is whether or not there are outstanding (partial)  modifications "
"to the Value."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B\n"
":   The ViewModel is *blurred*. That is, it does not have the focus.\n"
"    User input will not reach the control.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"F\n"
":   The ViewModel is *focused*. That is, it has the focus. The control\n"
"    will be notified of the user’s next input.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"IF\n"
":   The ViewModel is *implicitely focused*. This states is reached by\n"
"    signalling user input without first signalling a focusing event. It\n"
"    is a convenient shortcut for Toolkits which do not track the concept\n"
"    of focus. Since this state is unaware of the user’s focus, it has to\n"
"    bubble changes to the canonically formatted Value immediately to the\n"
"    View, possibly disrupting the user’s input.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"UV\n"
":   The View should display the *unmodified Value*. This is the common\n"
"    state when no input was received or all input was processed\n"
"    successfully.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"PUI\n"
":   The View should display a *partial user input*. If the user cannot\n"
"    input a valid value atomically, the ViewModel will enter this state\n"
"    to keep track of the partial value to add more input from the user\n"
"    until a valid value is formed.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"WM\n"
":   The ViewModel is currently *writing to the Model*. Change\n"
"    notifications from the Model in this state are generated by the\n"
"    writing ViewModel and thus must be ignored locally.\n"
msgstr ""

#. type: Plain text
msgid ""
"There are several events that determine the actual state of the "
"InputViewModel."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"F\n"
":   The ViewModel receives *Focus*.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B1\n"
":   The ViewModel looses *Focus*. Since this signals the user loosing\n"
"    interest in further editing this Value, a change in the\n"
"    FormattedValue is signalled[^2] to update the View to the canonical\n"
"    representation of the Value.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B2\n"
":   The ViewModel looses *Focus*. Since the user has still a pending\n"
"    partial input, the ViewModel expects the user to return and continue\n"
"    editing.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"MC1\n"
":   The Model is *changed* by a third party. This might be due to\n"
"    changes from the business logic or via other ViewModels. In any case\n"
"    the View should be signalled to update its display to the new Value.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"MC2\n"
":   The Model is *changed* by a third party. The user is currently\n"
"    editing the Value, so changes there should be ignored. In most cases\n"
"    this constitutes a programming error, as no code should try to\n"
"    change values while the user is editing them.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"MC3\n"
":   The Model is *changed* by the ViewModel. The View should be\n"
"    signalled to update its display to the new Value. Since this is in\n"
"    reaction to user input, this might not display a canonicalized value\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"PI\n"
":   The user enters *partial input*. The ViewModel will store this until\n"
"    the user completes or aborts[^3] her edit.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"VI\n"
":   The user enters *complete input*. The ViewModel accepts the input as\n"
"    valid and will proceed to write it back to the Model.\n"
msgstr ""

#. type: Plain text
msgid "[^1]: usually the keyboard focus"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"[^2]: If the user has not modified the Value, this signalling could be\n"
"    optimized away. Since the canonical representation should always be\n"
"    on display unless the user is currently editing this is not deemed\n"
"    an issue at this time.\n"
msgstr ""

#. type: Plain text
msgid "[^3]: Canceling is currently not supported"
msgstr ""
